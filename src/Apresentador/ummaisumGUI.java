/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apresentador;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author stelio
 */
public class ummaisumGUI extends javax.swing.JFrame {

    /**
     * Creates new form ummaisumGUI
     */
    public ummaisumGUI() {
        initComponents();
        
        switch(selecionadorOrdem.getSelectedIndex()){
            case 0:
                painel2x2.setVisible(false);
                painel3x3.setVisible(false);
                painel4x4.setVisible(false);
                painel5x5.setVisible(false);
                painel6x6.setVisible(false);
                jPanel7.setVisible(false);
                clearMatriz.setVisible(false);
            break;
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        painel2x2 = new javax.swing.JPanel();
        a11 = new javax.swing.JTextField();
        a12 = new javax.swing.JTextField();
        a21 = new javax.swing.JTextField();
        a22 = new javax.swing.JTextField();
        calcular2x2 = new javax.swing.JButton();
        painel3x3 = new javax.swing.JPanel();
        b11 = new javax.swing.JTextField();
        b21 = new javax.swing.JTextField();
        b12 = new javax.swing.JTextField();
        b22 = new javax.swing.JTextField();
        b13 = new javax.swing.JTextField();
        b23 = new javax.swing.JTextField();
        b31 = new javax.swing.JTextField();
        b32 = new javax.swing.JTextField();
        b33 = new javax.swing.JTextField();
        calcular3x3 = new javax.swing.JButton();
        painel4x4 = new javax.swing.JPanel();
        c11 = new javax.swing.JTextField();
        c21 = new javax.swing.JTextField();
        c12 = new javax.swing.JTextField();
        c22 = new javax.swing.JTextField();
        c31 = new javax.swing.JTextField();
        c32 = new javax.swing.JTextField();
        c13 = new javax.swing.JTextField();
        c23 = new javax.swing.JTextField();
        c33 = new javax.swing.JTextField();
        c41 = new javax.swing.JTextField();
        c42 = new javax.swing.JTextField();
        c43 = new javax.swing.JTextField();
        c14 = new javax.swing.JTextField();
        c24 = new javax.swing.JTextField();
        c34 = new javax.swing.JTextField();
        c44 = new javax.swing.JTextField();
        calcular4x4 = new javax.swing.JButton();
        painel5x5 = new javax.swing.JPanel();
        d11 = new javax.swing.JTextField();
        d21 = new javax.swing.JTextField();
        d12 = new javax.swing.JTextField();
        d22 = new javax.swing.JTextField();
        d31 = new javax.swing.JTextField();
        d32 = new javax.swing.JTextField();
        d13 = new javax.swing.JTextField();
        d23 = new javax.swing.JTextField();
        d33 = new javax.swing.JTextField();
        d41 = new javax.swing.JTextField();
        d42 = new javax.swing.JTextField();
        d43 = new javax.swing.JTextField();
        d14 = new javax.swing.JTextField();
        d24 = new javax.swing.JTextField();
        d34 = new javax.swing.JTextField();
        d44 = new javax.swing.JTextField();
        d51 = new javax.swing.JTextField();
        d15 = new javax.swing.JTextField();
        d25 = new javax.swing.JTextField();
        d35 = new javax.swing.JTextField();
        d45 = new javax.swing.JTextField();
        d52 = new javax.swing.JTextField();
        d53 = new javax.swing.JTextField();
        d54 = new javax.swing.JTextField();
        d55 = new javax.swing.JTextField();
        calcular5x5 = new javax.swing.JButton();
        painel6x6 = new javax.swing.JPanel();
        e11 = new javax.swing.JTextField();
        e21 = new javax.swing.JTextField();
        e12 = new javax.swing.JTextField();
        e31 = new javax.swing.JTextField();
        e22 = new javax.swing.JTextField();
        e32 = new javax.swing.JTextField();
        e13 = new javax.swing.JTextField();
        e23 = new javax.swing.JTextField();
        e33 = new javax.swing.JTextField();
        e41 = new javax.swing.JTextField();
        e42 = new javax.swing.JTextField();
        e43 = new javax.swing.JTextField();
        e15 = new javax.swing.JTextField();
        e24 = new javax.swing.JTextField();
        e34 = new javax.swing.JTextField();
        e44 = new javax.swing.JTextField();
        calcular6x6 = new javax.swing.JButton();
        e16 = new javax.swing.JTextField();
        e25 = new javax.swing.JTextField();
        e26 = new javax.swing.JTextField();
        e35 = new javax.swing.JTextField();
        e36 = new javax.swing.JTextField();
        e45 = new javax.swing.JTextField();
        e46 = new javax.swing.JTextField();
        e51 = new javax.swing.JTextField();
        e52 = new javax.swing.JTextField();
        e53 = new javax.swing.JTextField();
        e54 = new javax.swing.JTextField();
        e55 = new javax.swing.JTextField();
        e56 = new javax.swing.JTextField();
        e66 = new javax.swing.JTextField();
        e65 = new javax.swing.JTextField();
        e64 = new javax.swing.JTextField();
        e63 = new javax.swing.JTextField();
        e62 = new javax.swing.JTextField();
        e14 = new javax.swing.JTextField();
        e61 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        selecionadorOrdem = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        resultadoLabel = new javax.swing.JLabel();
        limparButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        clearMatriz = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        sairMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora de determinantes");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(737, 452));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        painel2x2.setLayout(new java.awt.GridBagLayout());

        a11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        painel2x2.add(a11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        painel2x2.add(a12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel2x2.add(a21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel2x2.add(a22, gridBagConstraints);

        calcular2x2.setText("Calcular");
        calcular2x2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular2x2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        painel2x2.add(calcular2x2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(painel2x2, gridBagConstraints);

        painel3x3.setToolTipText("");
        painel3x3.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel3x3.add(b11, gridBagConstraints);

        b21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel3x3.add(b12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b22, gridBagConstraints);

        b13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel3x3.add(b13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel3x3.add(b33, gridBagConstraints);

        calcular3x3.setText("Calcular");
        calcular3x3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular3x3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        painel3x3.add(calcular3x3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        getContentPane().add(painel3x3, gridBagConstraints);

        painel4x4.setLayout(new java.awt.GridBagLayout());

        c11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        painel4x4.add(c11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel4x4.add(c12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel4x4.add(c13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c33, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c42, gridBagConstraints);

        c43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c43, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        painel4x4.add(c14, gridBagConstraints);

        c24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c24, gridBagConstraints);

        c34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c34ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c34, gridBagConstraints);

        c44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel4x4.add(c44, gridBagConstraints);

        calcular4x4.setText("Calcular");
        calcular4x4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular4x4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        painel4x4.add(calcular4x4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        getContentPane().add(painel4x4, gridBagConstraints);

        painel5x5.setLayout(new java.awt.GridBagLayout());

        d11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        painel5x5.add(d11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel5x5.add(d12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel5x5.add(d13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d33, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d42, gridBagConstraints);

        d43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d43, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        painel5x5.add(d14, gridBagConstraints);

        d24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d24, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d34, gridBagConstraints);

        d44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d44, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d51, gridBagConstraints);

        d15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel5x5.add(d15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d25, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d35, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d45, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d52, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d53, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d54, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel5x5.add(d55, gridBagConstraints);

        calcular5x5.setText("Calcular");
        calcular5x5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular5x5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        painel5x5.add(calcular5x5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        getContentPane().add(painel5x5, gridBagConstraints);

        painel6x6.setLayout(new java.awt.GridBagLayout());

        e11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e33, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e42, gridBagConstraints);

        e43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e43, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e15, gridBagConstraints);

        e24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e24, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e34, gridBagConstraints);

        e44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e44, gridBagConstraints);

        calcular6x6.setText("Calcular");
        calcular6x6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular6x6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        painel6x6.add(calcular6x6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e25, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e26, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e35, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e36, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e45, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e46, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e51, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e52, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e53, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e54, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e55, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e56, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e66, gridBagConstraints);

        e65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e65ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e65, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e64, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e63, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e62, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        painel6x6.add(e14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        painel6x6.add(e61, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        getContentPane().add(painel6x6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Jam Sessions Personal Use", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("-Calculadora de Determinantes-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Selecione a ordem da matriz:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jPanel5, gridBagConstraints);

        selecionadorOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "2x2", "3x3", "4x4", "5x5", "6x6" }));
        selecionadorOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionadorOrdemActionPerformed(evt);
            }
        });
        jPanel6.add(selecionadorOrdem, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("O valor da determinante é ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel7.add(jLabel3, gridBagConstraints);

        resultadoLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        resultadoLabel.setText("_____");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel7.add(resultadoLabel, gridBagConstraints);

        limparButton.setText("Limpar Resultado");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jPanel7.add(limparButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        getContentPane().add(jPanel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        getContentPane().add(jSeparator3, gridBagConstraints);

        clearMatriz.setText("Limpar valores da matriz ");
        clearMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMatrizActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        getContentPane().add(clearMatriz, gridBagConstraints);

        jMenu1.setText("File");
        jMenu1.setToolTipText("");

        sairMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.META_MASK));
        sairMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawables/exit_icon.png"))); // NOI18N
        sairMenu.setText("Sair");
        sairMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairMenuActionPerformed(evt);
            }
        });
        jMenu1.add(sairMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("info");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawables/info_icon.png"))); // NOI18N
        jMenuItem3.setText("Versão 1.0");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // VALOR DO DETERMINANTE INICIAL
    Integer determinante = 0;
        
    private void selecionadorOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionadorOrdemActionPerformed
        // TODO add your handling code here:
        switch (selecionadorOrdem.getSelectedIndex()) {
            case 1:
                painel2x2.setVisible(true);
                painel3x3.setVisible(false);
                jPanel7.setVisible(true);
                clearMatriz.setVisible(true);
                painel4x4.setVisible(false);
                painel5x5.setVisible(false);
                painel6x6.setVisible(false);
                resultadoLabel.setText("____");
                
                break;
            case 2:
                painel2x2.setVisible(false);
                painel3x3.setVisible(true);
                jPanel7.setVisible(true);
                clearMatriz.setVisible(true);
                painel4x4.setVisible(false);
                painel5x5.setVisible(false);
                painel6x6.setVisible(false);
                resultadoLabel.setText("____");
                
                break;
            case 3:  
                painel2x2.setVisible(false);
                painel3x3.setVisible(false);
                painel4x4.setVisible(true);
                jPanel7.setVisible(true);
                clearMatriz.setVisible(true);
                painel5x5.setVisible(false);
                painel6x6.setVisible(false);
                resultadoLabel.setText("____");
                
                break;
                
            case 4:  
                painel2x2.setVisible(false);
                painel3x3.setVisible(false);
                painel4x4.setVisible(false);
                painel5x5.setVisible(true);
                jPanel7.setVisible(true);
                clearMatriz.setVisible(true);
                painel6x6.setVisible(false);
                resultadoLabel.setText("____");
                break;
                
            case 5:  
                painel2x2.setVisible(false);
                painel3x3.setVisible(false);
                painel4x4.setVisible(false);
                painel5x5.setVisible(false);
                painel6x6.setVisible(true);
                clearMatriz.setVisible(true);
                jPanel7.setVisible(true);
                resultadoLabel.setText("____");
                break;
            default:
                painel2x2.setVisible(false);
                painel3x3.setVisible(false);
                painel4x4.setVisible(false);
                painel5x5.setVisible(false);
                painel6x6.setVisible(false);
                jPanel7.setVisible(false);
                resultadoLabel.setText("____");
                clearMatriz.setVisible(false);
                break;
        }
    }//GEN-LAST:event_selecionadorOrdemActionPerformed

    private void a11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a11ActionPerformed

    private void b13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b13ActionPerformed

    private void b21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b21ActionPerformed

    private void e11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e11ActionPerformed

    private void e43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e43ActionPerformed

    private void e24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e24ActionPerformed

    private void e44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e44ActionPerformed

    private void calcular6x6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular6x6ActionPerformed
        // TODO add your handling code here:
        try{
            Integer ee11 = Integer.valueOf(e11.getText());
            Integer ee12 = Integer.valueOf(e12.getText());
            Integer ee13 = Integer.valueOf(e13.getText());
            Integer ee14 = Integer.valueOf(e14.getText());
            Integer ee15 = Integer.valueOf(e15.getText());
            Integer ee16 = Integer.valueOf(e16.getText());
            
            Integer ee21 = Integer.valueOf(e21.getText());
            Integer ee22 = Integer.valueOf(e22.getText());
            Integer ee23 = Integer.valueOf(e23.getText());
            Integer ee24 = Integer.valueOf(e24.getText());
            Integer ee25 = Integer.valueOf(e25.getText());
            Integer ee26 = Integer.valueOf(e26.getText());

            Integer ee31 = Integer.valueOf(e31.getText());
            Integer ee32 = Integer.valueOf(e32.getText());
            Integer ee33 = Integer.valueOf(e33.getText());
            Integer ee34 = Integer.valueOf(e34.getText());
            Integer ee35 = Integer.valueOf(e35.getText());
            Integer ee36 = Integer.valueOf(e36.getText());

            Integer ee41 = Integer.valueOf(e41.getText());
            Integer ee42 = Integer.valueOf(e42.getText());
            Integer ee43 = Integer.valueOf(e43.getText());
            Integer ee44 = Integer.valueOf(e44.getText());
            Integer ee45 = Integer.valueOf(e45.getText());
            Integer ee46 = Integer.valueOf(e46.getText());

            Integer ee51 = Integer.valueOf(e51.getText());
            Integer ee52 = Integer.valueOf(e52.getText());
            Integer ee53 = Integer.valueOf(e53.getText());
            Integer ee54 = Integer.valueOf(e54.getText());
            Integer ee55 = Integer.valueOf(e55.getText());
            Integer ee56 = Integer.valueOf(e56.getText());

            Integer ee61 = Integer.valueOf(e61.getText());
            Integer ee62 = Integer.valueOf(e62.getText());
            Integer ee63 = Integer.valueOf(e63.getText());
            Integer ee64 = Integer.valueOf(e64.getText());
            Integer ee65 = Integer.valueOf(e65.getText());
            Integer ee66 = Integer.valueOf(e66.getText());
        
        // para ee11:
            // para ee22
            int determinante_ee33 = ee33*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int determinante_ee34 = ee34*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int determinante_ee35 = ee35*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int determinante_ee36 = ee36*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));

            // para ee23
            int deter_ee32 = ee32*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int deter_ee34 = ee34*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int deter_ee35 = ee35*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int deter_ee36 = ee36*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));

            // para ee24
            int det_ee32 = ee32*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int det_ee33 = ee33*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int det_ee35 = ee35*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int det_ee36 = ee36*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));

            // para ee25
            int de_ee32 = ee32*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int de_ee33 = ee33*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int de_ee34 = ee34*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int de_ee36 = ee36*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));

            // para ee26
            int d_ee32 = ee32*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));
            int d_ee33 = ee33*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));
            int d_ee34 = ee34*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));
            int d_ee35 = ee35*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));
            
            
        int resultado_ee22 = ee22 * (determinante_ee33 - determinante_ee34 + determinante_ee35 - determinante_ee36);
        int resultado_ee23 = ee23 * (deter_ee32 - deter_ee34 + deter_ee35 - deter_ee36);
        int resultado_ee24 = ee24 * (det_ee32 - det_ee33 + det_ee35 - det_ee36);
        int resultado_ee25 = ee25 * (de_ee32 - de_ee33 + de_ee34 - de_ee36);
        int resultado_ee26 = ee26 * (d_ee32 - d_ee33 + d_ee34 - d_ee35);

        int resultado_ee11 = ee11 * (resultado_ee22 - resultado_ee23 + resultado_ee24 - resultado_ee25 + resultado_ee26);

        // para ee12:
            // para ee21
            int determinante2_ee33 = ee33*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int determinante2_ee34 = ee34*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int determinante2_ee35 = ee35*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int determinante2_ee36 = ee36*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));

            // para ee23
            int deter2_ee31 = ee31*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int deter2_ee34 = ee34*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int deter2_ee35 = ee35*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int deter2_ee36 = ee36*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));

            // para ee24
            int det2_ee31 = ee31*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int det2_ee33 = ee33*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int det2_ee35 = ee35*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int det2_ee36 = ee36*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));

            // para ee25
            int de2_ee31 = ee31*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int de2_ee33 = ee33*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int de2_ee34 = ee34*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int de2_ee36 = ee36*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));

            // para ee26
            int d2_ee31 = ee31*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));
            int d2_ee33 = ee33*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));
            int d2_ee34 = ee34*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));
            int d2_ee35 = ee35*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));

            
        int resultado2_ee21 = ee21 * (determinante2_ee33 - determinante2_ee34 + determinante2_ee35 - determinante2_ee36);
        int resultado2_ee23 = ee23 * (deter2_ee31 - deter2_ee34 + deter2_ee35 - deter2_ee36);
        int resultado2_ee24 = ee24 * (det2_ee31 - det2_ee33 + det2_ee35 - det2_ee36);
        int resultado2_ee25 = ee25 * (de2_ee31 - de2_ee33 + de2_ee34 - de2_ee36);
        int resultado2_ee26 = ee26 * (d2_ee31 - d2_ee33 + d2_ee34 - d2_ee35);

        int resultado_ee12 = ee12 * (resultado2_ee21 - resultado2_ee23 + resultado2_ee24 - resultado2_ee25 + resultado2_ee26);

            
        // para ee13:
            // para ee21
            int determinante3_ee32 = ee32*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int determinante3_ee34 = ee34*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int determinante3_ee35 = ee35*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int determinante3_ee36 = ee36*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));

            // para ee22
            int deter3_ee31 = ee31*((ee44*ee55*ee66)+(ee45*ee56*ee64)+(ee46*ee65*ee54)-(ee46*ee55*ee64)-(ee45*ee54*ee66)-(ee44*ee65*ee56));
            int deter3_ee34 = ee34*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int deter3_ee35 = ee35*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int deter3_ee36 = ee36*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));

            // para ee24
            int det3_ee31 = ee31*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int det3_ee32 = ee32*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int det3_ee35 = ee35*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int det3_ee36 = ee36*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            
            // para ee25
            int de3_ee31 = ee31*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int de3_ee32 = ee32*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int de3_ee34 = ee34*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int de3_ee36 = ee36*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));

            // para ee26
            int d3_ee31 = ee31*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));
            int d3_ee32 = ee32*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));
            int d3_ee34 = ee34*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            int d3_ee35 = ee35*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));

        int resultado3_ee21 = ee21 * (determinante3_ee32 - determinante3_ee34 + determinante3_ee35 - determinante3_ee36);
        int resultado3_ee22 = ee22 * (deter3_ee31 - deter3_ee34 + deter3_ee35 - deter3_ee36);
        int resultado3_ee24 = ee24 * (det3_ee31 - det3_ee32 + det3_ee35 - det3_ee36);
        int resultado3_ee25 = ee25 * (de3_ee31 - de3_ee32 + de3_ee34 - de3_ee36);
        int resultado3_ee26 = ee26 * (d3_ee31 - d3_ee32 + d3_ee34 - d3_ee35);

        int resultado_ee13 = ee13 * (resultado3_ee21 - resultado3_ee22 + resultado3_ee24 - resultado3_ee25 + resultado3_ee26);

        // para ee14:
            // para ee21
            int determinante4_ee32 = ee32*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int determinante4_ee33 = ee33*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int determinante4_ee35 = ee35*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int determinante4_ee36 = ee36*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));

            // para ee22
            int deter4_ee31 = ee31*((ee43*ee55*ee66)+(ee45*ee56*ee63)+(ee46*ee65*ee53)-(ee46*ee55*ee63)-(ee45*ee53*ee66)-(ee43*ee65*ee56));
            int deter4_ee33 = ee33*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int deter4_ee35 = ee35*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int deter4_ee36 = ee36*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));

            // para ee23
            int det4_ee31 = ee31*((ee42*ee55*ee66)+(ee45*ee56*ee62)+(ee46*ee65*ee52)-(ee46*ee55*ee62)-(ee45*ee52*ee66)-(ee42*ee65*ee56));
            int det4_ee32 = ee32*((ee41*ee55*ee66)+(ee45*ee56*ee61)+(ee46*ee65*ee51)-(ee46*ee55*ee61)-(ee45*ee51*ee66)-(ee41*ee65*ee56));
            int det4_ee35 = ee35*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int det4_ee36 = ee36*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            
            // para ee25
            int de4_ee31 = ee31*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int de4_ee32 = ee32*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int de4_ee33 = ee33*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int de4_ee36 = ee36*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));

            // para ee26
            int d4_ee31 = ee31*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));
            int d4_ee32 = ee32*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));
            int d4_ee33 = ee33*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            int d4_ee35 = ee35*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));
        
            
        int resultado4_ee21 = ee21 * (determinante4_ee32 - determinante4_ee33 + determinante4_ee35 - determinante4_ee36);
        int resultado4_ee22 = ee22 * (deter4_ee31 - deter4_ee33 + deter4_ee35 - deter4_ee36);
        int resultado4_ee23 = ee23 * (det4_ee31 - det4_ee32 + det4_ee35 - det4_ee36);
        int resultado4_ee25 = ee25 * (de4_ee31 - de4_ee32 + de4_ee33 - de4_ee36);
        int resultado4_ee26 = ee26 * (d4_ee31 - d4_ee32 + d4_ee33 - d4_ee35);

        int resultado_ee14 = ee14 * (resultado4_ee21 - resultado4_ee22 + resultado4_ee23 - resultado4_ee25 + resultado4_ee26);

        // para ee15:
            // para ee21
            int determinante5_ee32 = ee32*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int determinante5_ee33 = ee33*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int determinante5_ee34 = ee34*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int determinante5_ee36 = ee36*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));

            // para ee22
            int deter5_ee31 = ee31*((ee43*ee54*ee66)+(ee44*ee56*ee63)+(ee46*ee64*ee53)-(ee46*ee54*ee63)-(ee44*ee53*ee66)-(ee43*ee64*ee56));
            int deter5_ee33 = ee33*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int deter5_ee34 = ee34*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int deter5_ee36 = ee36*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));

            // para ee23
            int det5_ee31 = ee31*((ee42*ee54*ee66)+(ee44*ee56*ee62)+(ee46*ee64*ee52)-(ee46*ee54*ee62)-(ee44*ee52*ee66)-(ee42*ee64*ee56));
            int det5_ee32 = ee32*((ee41*ee54*ee66)+(ee44*ee56*ee61)+(ee46*ee64*ee51)-(ee46*ee54*ee61)-(ee44*ee51*ee66)-(ee41*ee64*ee56));
            int det5_ee34 = ee34*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int det5_ee36 = ee36*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));
            
            // para ee24
            int de5_ee31 = ee31*((ee42*ee53*ee66)+(ee43*ee56*ee62)+(ee46*ee63*ee52)-(ee46*ee53*ee62)-(ee43*ee52*ee66)-(ee42*ee63*ee56));
            int de5_ee32 = ee32*((ee41*ee53*ee66)+(ee43*ee56*ee61)+(ee46*ee63*ee51)-(ee46*ee53*ee61)-(ee43*ee51*ee66)-(ee41*ee63*ee56));
            int de5_ee33 = ee33*((ee41*ee52*ee66)+(ee42*ee56*ee61)+(ee46*ee62*ee51)-(ee46*ee52*ee61)-(ee42*ee51*ee66)-(ee41*ee62*ee56));
            int de5_ee36 = ee36*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));

            // para ee26
            int d5_ee31 = ee31*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));
            int d5_ee32 = ee32*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));
            int d5_ee33 = ee33*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));
            int d5_ee34 = ee34*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));

        int resultado5_ee21 = ee21 * (determinante5_ee32 - determinante5_ee33 + determinante5_ee34 - determinante5_ee36);
        int resultado5_ee22 = ee22 * (deter5_ee31 - deter5_ee33 + deter5_ee34 - deter5_ee36);
        int resultado5_ee23 = ee23 * (det5_ee31 - det5_ee32 + det5_ee34 - det5_ee36);
        int resultado5_ee24 = ee24 * (de5_ee31 - de5_ee32 + de5_ee33 - de5_ee36);
        int resultado5_ee26 = ee26 * (d5_ee31 - d5_ee32 + d5_ee33 - d5_ee34);

        int resultado_ee15 = ee15 * (resultado5_ee21 - resultado5_ee22 + resultado5_ee23 - resultado5_ee24 + resultado5_ee26);

        // para ee16:
            // para ee21
            int determinante6_ee32 = ee32*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));
            int determinante6_ee33 = ee33*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));
            int determinante6_ee34 = ee34*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));
            int determinante6_ee35 = ee35*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));

            // para ee22
            int deter6_ee31 = ee31*((ee43*ee54*ee65)+(ee44*ee55*ee63)+(ee45*ee64*ee53)-(ee45*ee54*ee63)-(ee44*ee53*ee65)-(ee43*ee64*ee55));
            int deter6_ee33 = ee33*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));
            int deter6_ee34 = ee34*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));
            int deter6_ee35 = ee35*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));

            // para ee23
            int det6_ee31 = ee31*((ee42*ee54*ee65)+(ee44*ee55*ee62)+(ee45*ee64*ee52)-(ee45*ee54*ee62)-(ee44*ee52*ee65)-(ee42*ee64*ee55));
            int det6_ee32 = ee32*((ee41*ee54*ee65)+(ee44*ee55*ee61)+(ee45*ee64*ee51)-(ee45*ee54*ee61)-(ee44*ee51*ee65)-(ee41*ee64*ee55));
            int det6_ee34 = ee34*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            int det6_ee35 = ee35*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));

            // para ee24
            int de6_ee31 = ee31*((ee42*ee53*ee65)+(ee43*ee55*ee62)+(ee45*ee63*ee52)-(ee45*ee53*ee62)-(ee43*ee52*ee65)-(ee42*ee63*ee55));
            int de6_ee32 = ee32*((ee41*ee53*ee65)+(ee43*ee55*ee61)+(ee45*ee63*ee51)-(ee45*ee53*ee61)-(ee43*ee51*ee65)-(ee41*ee63*ee55));
            int de6_ee33 = ee33*((ee41*ee52*ee65)+(ee42*ee55*ee61)+(ee45*ee62*ee51)-(ee45*ee52*ee61)-(ee42*ee51*ee65)-(ee41*ee62*ee55));
            int de6_ee35 = ee35*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));

            // para ee25
            int d6_ee31 = ee31*((ee42*ee53*ee64)+(ee43*ee54*ee62)+(ee44*ee63*ee52)-(ee44*ee53*ee62)-(ee43*ee52*ee64)-(ee42*ee63*ee54));
            int d6_ee32 = ee32*((ee41*ee53*ee64)+(ee43*ee54*ee61)+(ee44*ee63*ee51)-(ee44*ee53*ee61)-(ee43*ee51*ee64)-(ee41*ee63*ee54));
            int d6_ee33 = ee33*((ee41*ee52*ee64)+(ee42*ee54*ee61)+(ee44*ee62*ee51)-(ee44*ee52*ee61)-(ee42*ee51*ee64)-(ee41*ee62*ee54));
            int d6_ee34 = ee34*((ee41*ee52*ee63)+(ee42*ee53*ee61)+(ee43*ee62*ee51)-(ee43*ee52*ee61)-(ee42*ee51*ee63)-(ee41*ee62*ee53));

        int resultado6_ee21 = ee21 * (determinante6_ee32 - determinante6_ee33 + determinante6_ee34 - determinante6_ee35);
        int resultado6_ee22 = ee22 * (deter6_ee31 - deter6_ee33 + deter6_ee34 - deter6_ee35);
        int resultado6_ee23 = ee23 * (det6_ee31 - det6_ee32 + det6_ee34 - det6_ee35);
        int resultado6_ee24 = ee24 * (de6_ee31 - de6_ee32 + de6_ee33 - de6_ee35);
        int resultado6_ee25 = ee25 * (d6_ee31 - d6_ee32 + d6_ee33 - d6_ee34);

        int resultado_ee16 = ee16 * (resultado6_ee21 - resultado6_ee22 + resultado6_ee23 - resultado6_ee24 + resultado6_ee25);

        
        // e por fim:
        determinante = resultado_ee11 - resultado_ee12 + resultado_ee13 - resultado_ee14 + resultado_ee15 - resultado_ee16;
        resultadoLabel.setText(determinante.toString());
        
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Por favor verifique os valores da matriz.", "Atenção" , JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_calcular6x6ActionPerformed

    private void c11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c11ActionPerformed

    private void c43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c43ActionPerformed

    private void c24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c24ActionPerformed

    private void c44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c44ActionPerformed

    private void calcular4x4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular4x4ActionPerformed
        // TODO add your handling code here:
        try{
            Integer cc11 = Integer.valueOf(c11.getText());
            Integer cc12 = Integer.valueOf(c12.getText());
            Integer cc13 = Integer.valueOf(c13.getText());
            Integer cc14 = Integer.valueOf(c14.getText());
            
            Integer cc21 = Integer.valueOf(c21.getText());
            Integer cc22 = Integer.valueOf(c22.getText());
            Integer cc23 = Integer.valueOf(c23.getText());
            Integer cc24 = Integer.valueOf(c24.getText());
            
            Integer cc31 = Integer.valueOf(c31.getText());
            Integer cc32 = Integer.valueOf(c32.getText());
            Integer cc33 = Integer.valueOf(c33.getText());
            Integer cc34 = Integer.valueOf(c34.getText());
            
            Integer cc41 = Integer.valueOf(c41.getText());
            Integer cc42 = Integer.valueOf(c42.getText());
            Integer cc43 = Integer.valueOf(c43.getText());
            Integer cc44 = Integer.valueOf(c44.getText());
            
            int determinante_cc11 = cc11*((cc22*cc33*cc44)+(cc23*cc34*cc42)+(cc24*cc43*cc32)-(cc24*cc33*cc42)-(cc23*cc32*cc44)-(cc22*cc43*cc34));
            int determinante_cc12 = cc12*((cc21*cc33*cc44)+(cc23*cc34*cc41)+(cc24*cc43*cc31)-(cc24*cc33*cc41)-(cc23*cc31*cc44)-(cc21*cc43*cc34));
            int determinante_cc13 = cc13*((cc21*cc32*cc44)+(cc22*cc34*cc41)+(cc24*cc42*cc31)-(cc24*cc32*cc41)-(cc22*cc31*cc44)-(cc21*cc42*cc34));
            int determinante_cc14 = cc14*((cc21*cc32*cc43)+(cc22*cc33*cc41)+(cc23*cc42*cc31)-(cc23*cc32*cc41)-(cc22*cc31*cc43)-(cc21*cc42*cc33));
            
            determinante = determinante_cc11 - determinante_cc12 + determinante_cc13 - determinante_cc14;
            resultadoLabel.setText(determinante.toString());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Por favor verifique os valores da matriz.", "Atenção" , JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calcular4x4ActionPerformed

    private void calcular5x5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular5x5ActionPerformed
        // TODO add your handling code here:
        try{
            Integer dd11 = Integer.valueOf(d11.getText());
            Integer dd12 = Integer.valueOf(d12.getText());
            Integer dd13 = Integer.valueOf(d13.getText());
            Integer dd14 = Integer.valueOf(d14.getText());
            Integer dd15 = Integer.valueOf(d15.getText());
            
            Integer dd21 = Integer.valueOf(d21.getText());
            Integer dd22 = Integer.valueOf(d22.getText());
            Integer dd23 = Integer.valueOf(d23.getText());
            Integer dd24 = Integer.valueOf(d24.getText());
            Integer dd25 = Integer.valueOf(d25.getText());
            
            Integer dd31 = Integer.valueOf(d31.getText());
            Integer dd32 = Integer.valueOf(d32.getText());
            Integer dd33 = Integer.valueOf(d33.getText());
            Integer dd34 = Integer.valueOf(d34.getText());
            Integer dd35 = Integer.valueOf(d35.getText());
            
            Integer dd41 = Integer.valueOf(d41.getText());
            Integer dd42 = Integer.valueOf(d42.getText());
            Integer dd43 = Integer.valueOf(d43.getText());
            Integer dd44 = Integer.valueOf(d44.getText());
            Integer dd45 = Integer.valueOf(d45.getText());
            
            Integer dd51 = Integer.valueOf(d51.getText());
            Integer dd52 = Integer.valueOf(d52.getText());
            Integer dd53 = Integer.valueOf(d53.getText());
            Integer dd54 = Integer.valueOf(d54.getText());
            Integer dd55 = Integer.valueOf(d55.getText());
            
            // para dd11
            int determinante_dd22 = dd22*((dd33*dd44*dd55)+(dd34*dd45*dd53)+(dd35*dd54*dd43)-(dd35*dd44*dd53)-(dd34*dd43*dd55)-(dd33*dd54*dd45));
            int determinante_dd23 = dd23*((dd32*dd44*dd55)+(dd34*dd45*dd52)+(dd35*dd54*dd42)-(dd35*dd44*dd52)-(dd34*dd42*dd55)-(dd32*dd54*dd45));
            int determinante_dd24 = dd24*((dd32*dd43*dd55)+(dd33*dd45*dd52)+(dd35*dd53*dd42)-(dd35*dd43*dd52)-(dd33*dd42*dd55)-(dd32*dd53*dd45));
            int determinante_dd25 = dd25*((dd32*dd43*dd54)+(dd33*dd44*dd52)+(dd34*dd53*dd42)-(dd34*dd43*dd52)-(dd33*dd42*dd54)-(dd32*dd53*dd44));
            
            // para dd12
            int deter_dd21 = dd21*((dd33*dd44*dd55)+(dd34*dd45*dd53)+(dd35*dd54*dd43)-(dd35*dd44*dd53)-(dd34*dd43*dd55)-(dd33*dd54*dd45));
            int deter_dd23 = dd23*((dd31*dd44*dd55)+(dd34*dd45*dd51)+(dd35*dd54*dd41)-(dd35*dd44*dd51)-(dd34*dd41*dd55)-(dd31*dd54*dd45));
            int deter_dd24 = dd24*((dd31*dd43*dd55)+(dd33*dd45*dd51)+(dd35*dd53*dd41)-(dd35*dd43*dd51)-(dd33*dd41*dd55)-(dd31*dd53*dd45));
            int deter_dd25 = dd25*((dd31*dd43*dd54)+(dd33*dd44*dd51)+(dd34*dd53*dd41)-(dd34*dd43*dd51)-(dd33*dd41*dd54)-(dd31*dd53*dd44));

            // para dd13
            int det_dd21 = dd21*((dd32*dd44*dd55)+(dd34*dd45*dd52)+(dd35*dd54*dd42)-(dd35*dd44*dd52)-(dd34*dd42*dd55)-(dd32*dd54*dd45));
            int det_dd22 = dd22*((dd31*dd44*dd55)+(dd34*dd45*dd51)+(dd35*dd54*dd41)-(dd35*dd44*dd51)-(dd34*dd41*dd55)-(dd31*dd54*dd45));
            int det_dd24 = dd24*((dd31*dd42*dd55)+(dd32*dd45*dd51)+(dd35*dd52*dd41)-(dd35*dd42*dd51)-(dd32*dd41*dd55)-(dd31*dd52*dd45));
            int det_dd25 = dd25*((dd31*dd42*dd54)+(dd32*dd44*dd51)+(dd34*dd52*dd41)-(dd34*dd42*dd51)-(dd32*dd41*dd54)-(dd31*dd52*dd44));

            // para dd14
            int de_dd21 = dd21*((dd32*dd43*dd55)+(dd33*dd45*dd52)+(dd35*dd53*dd42)-(dd35*dd43*dd52)-(dd33*dd42*dd55)-(dd32*dd53*dd45));
            int de_dd22 = dd22*((dd31*dd43*dd55)+(dd33*dd45*dd51)+(dd35*dd53*dd41)-(dd35*dd43*dd51)-(dd33*dd41*dd55)-(dd31*dd53*dd45));
            int de_dd23 = dd23*((dd31*dd42*dd55)+(dd32*dd45*dd51)+(dd35*dd52*dd41)-(dd35*dd42*dd51)-(dd32*dd41*dd55)-(dd31*dd52*dd45));
            int de_dd25 = dd25*((dd31*dd42*dd53)+(dd32*dd43*dd51)+(dd33*dd52*dd41)-(dd33*dd42*dd51)-(dd32*dd41*dd53)-(dd31*dd52*dd43));

            // para dd15
            int d_dd21 = dd21*((dd32*dd43*dd54)+(dd33*dd44*dd52)+(dd34*dd53*dd42)-(dd34*dd43*dd52)-(dd33*dd42*dd54)-(dd32*dd53*dd44));
            int d_dd22 = dd22*((dd31*dd43*dd54)+(dd33*dd44*dd51)+(dd34*dd53*dd41)-(dd34*dd43*dd51)-(dd33*dd41*dd54)-(dd31*dd53*dd44));
            int d_dd23 = dd23*((dd31*dd42*dd54)+(dd32*dd44*dd51)+(dd34*dd52*dd41)-(dd34*dd42*dd51)-(dd32*dd41*dd54)-(dd31*dd52*dd44));
            int d_dd24 = dd24*((dd31*dd42*dd53)+(dd32*dd43*dd51)+(dd33*dd52*dd41)-(dd33*dd42*dd51)-(dd32*dd41*dd53)-(dd31*dd52*dd43));

            
            
            // contas: 
            int determinante_dd11 = determinante_dd22 - determinante_dd23 + determinante_dd24 - determinante_dd25;
            int determinante_dd12 = deter_dd21 - deter_dd23 + deter_dd24 - deter_dd25;
            int determinante_dd13 = det_dd21 - det_dd22 + det_dd24 - det_dd25;
            int determinante_dd14 = de_dd21 - de_dd22 + de_dd23 - de_dd25;
            int determinante_dd15 = d_dd21 - d_dd22 + d_dd23 - d_dd24;
            
            // por fim:
            int resultado_d11 = determinante_dd11 * dd11;
            int resultado_d12 = determinante_dd12 * dd12;
            int resultado_d13 = determinante_dd13 * dd13;
            int resultado_d14 = determinante_dd14 * dd14;
            int resultado_d15 = determinante_dd15 * dd15;
            
            // e por fim fim:
            int resultadoFinal = resultado_d11 - resultado_d12 + resultado_d13 - resultado_d14 + resultado_d15;
            resultadoLabel.setText(String.valueOf(resultadoFinal));
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Por favor verifique os valores da matriz.", "Atenção" , JOptionPane.WARNING_MESSAGE);

        }
        
            
            
            
    }//GEN-LAST:event_calcular5x5ActionPerformed

    private void d44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d44ActionPerformed

    private void d24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d24ActionPerformed

    private void d43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d43ActionPerformed

    private void d11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d11ActionPerformed

    private void d15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d15ActionPerformed

    private void e65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e65ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e65ActionPerformed

    private void c34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c34ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c34ActionPerformed

    private void calcular2x2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular2x2ActionPerformed
        // TODO add your handling code here:
        try{
            Integer aa11 = Integer.valueOf(a11.getText());
            Integer aa12 = Integer.valueOf(a12.getText());
            
            Integer aa21 = Integer.valueOf(a21.getText());
            Integer aa22 = Integer.valueOf(a22.getText());
            
            determinante = (aa11*aa22)-(aa12*aa21);
            resultadoLabel.setText(determinante.toString());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Por favor verifique os valores da matriz.", "Atenção" , JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calcular2x2ActionPerformed

    private void calcular3x3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular3x3ActionPerformed
        // TODO add your handling code here:
        
        try{
            Integer bb11 = Integer.valueOf(b11.getText());
            Integer bb12 = Integer.valueOf(b12.getText());
            Integer bb13 = Integer.valueOf(b13.getText());
            
            Integer bb21 = Integer.valueOf(b21.getText());
            Integer bb22 = Integer.valueOf(b22.getText());
            Integer bb23 = Integer.valueOf(b23.getText());
            
            Integer bb31 = Integer.valueOf(b31.getText());
            Integer bb32 = Integer.valueOf(b32.getText());
            Integer bb33 = Integer.valueOf(b33.getText());
            
            determinante = (bb11*bb22*bb33)+(bb12*bb23*bb31)+(bb13*bb32*bb21)-(bb13*bb22*bb31)-(bb12*bb21*bb33)-(bb11*bb32*bb23);
            resultadoLabel.setText(determinante.toString());
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Por favor verifique os valores da matriz.", "Atenção" , JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calcular3x3ActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed
        // Limpar o resultado
        resultadoLabel.setText("____");
    }//GEN-LAST:event_limparButtonActionPerformed

    private void clearMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMatrizActionPerformed
        // TODO add your handling code here:
        switch (selecionadorOrdem.getSelectedIndex()) {
            case 1:
                a11.setText("");
                a12.setText("");
                a21.setText("");
                a22.setText("");
                break;
            case 2:
                b11.setText("");
                b12.setText("");
                b13.setText("");
                b21.setText("");
                b22.setText("");
                b23.setText("");
                b31.setText("");
                b32.setText("");
                b33.setText("");
                break;
            case 3:  
                c11.setText("");
                c12.setText("");
                c13.setText("");
                c14.setText("");
                c21.setText("");
                c22.setText("");
                c23.setText("");
                c24.setText("");
                c31.setText("");
                c32.setText("");
                c33.setText("");
                c34.setText("");
                c41.setText("");
                c42.setText("");
                c43.setText("");
                c44.setText("");
                break;
                
            case 4:  
                d11.setText("");
                d12.setText("");
                d13.setText("");
                d14.setText("");
                d15.setText("");
                d21.setText("");
                d22.setText("");
                d23.setText("");
                d24.setText("");
                d25.setText("");
                d31.setText("");
                d32.setText("");
                d33.setText("");
                d34.setText("");
                d35.setText("");
                d41.setText("");
                d42.setText("");
                d43.setText("");
                d44.setText("");
                d45.setText("");
                d51.setText("");
                d52.setText("");
                d53.setText("");
                d54.setText("");
                d55.setText("");
                break;
                
            case 5:  
                e11.setText("");
                e12.setText("");
                e13.setText("");
                e14.setText("");
                e15.setText("");
                e16.setText("");
                e21.setText("");
                e22.setText("");
                e23.setText("");
                e24.setText("");
                e25.setText("");
                e26.setText("");
                e31.setText("");
                e32.setText("");
                e33.setText("");
                e34.setText("");
                e35.setText("");
                e36.setText("");
                e41.setText("");
                e42.setText("");
                e43.setText("");
                e44.setText("");
                e45.setText("");
                e46.setText("");
                e51.setText("");
                e52.setText("");
                e53.setText("");
                e54.setText("");
                e55.setText("");
                e56.setText("");
                e61.setText("");
                e62.setText("");
                e63.setText("");
                e64.setText("");
                e65.setText("");
                e66.setText("");
                break;
            default:
                a11.setText("");
                a12.setText("");
                a21.setText("");
                a22.setText("");
                break;
        }
    }//GEN-LAST:event_clearMatrizActionPerformed

    private void sairMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairMenuActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Deseja sair do aplicativo?", "Sair", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
          // Saving code here
          System.exit(0);
        }
        
    }//GEN-LAST:event_sairMenuActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ummaisumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ummaisumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ummaisumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ummaisumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ummaisumGUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a11;
    private javax.swing.JTextField a12;
    private javax.swing.JTextField a21;
    private javax.swing.JTextField a22;
    private javax.swing.JTextField b11;
    private javax.swing.JTextField b12;
    private javax.swing.JTextField b13;
    private javax.swing.JTextField b21;
    private javax.swing.JTextField b22;
    private javax.swing.JTextField b23;
    private javax.swing.JTextField b31;
    private javax.swing.JTextField b32;
    private javax.swing.JTextField b33;
    private javax.swing.JTextField c11;
    private javax.swing.JTextField c12;
    private javax.swing.JTextField c13;
    private javax.swing.JTextField c14;
    private javax.swing.JTextField c21;
    private javax.swing.JTextField c22;
    private javax.swing.JTextField c23;
    private javax.swing.JTextField c24;
    private javax.swing.JTextField c31;
    private javax.swing.JTextField c32;
    private javax.swing.JTextField c33;
    private javax.swing.JTextField c34;
    private javax.swing.JTextField c41;
    private javax.swing.JTextField c42;
    private javax.swing.JTextField c43;
    private javax.swing.JTextField c44;
    private javax.swing.JButton calcular2x2;
    private javax.swing.JButton calcular3x3;
    private javax.swing.JButton calcular4x4;
    private javax.swing.JButton calcular5x5;
    private javax.swing.JButton calcular6x6;
    private javax.swing.JButton clearMatriz;
    private javax.swing.JTextField d11;
    private javax.swing.JTextField d12;
    private javax.swing.JTextField d13;
    private javax.swing.JTextField d14;
    private javax.swing.JTextField d15;
    private javax.swing.JTextField d21;
    private javax.swing.JTextField d22;
    private javax.swing.JTextField d23;
    private javax.swing.JTextField d24;
    private javax.swing.JTextField d25;
    private javax.swing.JTextField d31;
    private javax.swing.JTextField d32;
    private javax.swing.JTextField d33;
    private javax.swing.JTextField d34;
    private javax.swing.JTextField d35;
    private javax.swing.JTextField d41;
    private javax.swing.JTextField d42;
    private javax.swing.JTextField d43;
    private javax.swing.JTextField d44;
    private javax.swing.JTextField d45;
    private javax.swing.JTextField d51;
    private javax.swing.JTextField d52;
    private javax.swing.JTextField d53;
    private javax.swing.JTextField d54;
    private javax.swing.JTextField d55;
    private javax.swing.JTextField e11;
    private javax.swing.JTextField e12;
    private javax.swing.JTextField e13;
    private javax.swing.JTextField e14;
    private javax.swing.JTextField e15;
    private javax.swing.JTextField e16;
    private javax.swing.JTextField e21;
    private javax.swing.JTextField e22;
    private javax.swing.JTextField e23;
    private javax.swing.JTextField e24;
    private javax.swing.JTextField e25;
    private javax.swing.JTextField e26;
    private javax.swing.JTextField e31;
    private javax.swing.JTextField e32;
    private javax.swing.JTextField e33;
    private javax.swing.JTextField e34;
    private javax.swing.JTextField e35;
    private javax.swing.JTextField e36;
    private javax.swing.JTextField e41;
    private javax.swing.JTextField e42;
    private javax.swing.JTextField e43;
    private javax.swing.JTextField e44;
    private javax.swing.JTextField e45;
    private javax.swing.JTextField e46;
    private javax.swing.JTextField e51;
    private javax.swing.JTextField e52;
    private javax.swing.JTextField e53;
    private javax.swing.JTextField e54;
    private javax.swing.JTextField e55;
    private javax.swing.JTextField e56;
    private javax.swing.JTextField e61;
    private javax.swing.JTextField e62;
    private javax.swing.JTextField e63;
    private javax.swing.JTextField e64;
    private javax.swing.JTextField e65;
    private javax.swing.JTextField e66;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limparButton;
    private javax.swing.JPanel painel2x2;
    private javax.swing.JPanel painel3x3;
    private javax.swing.JPanel painel4x4;
    private javax.swing.JPanel painel5x5;
    private javax.swing.JPanel painel6x6;
    private javax.swing.JLabel resultadoLabel;
    private javax.swing.JMenuItem sairMenu;
    private javax.swing.JComboBox<String> selecionadorOrdem;
    // End of variables declaration//GEN-END:variables
}
